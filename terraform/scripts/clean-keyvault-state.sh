#!/bin/bash

# Script para limpiar el estado de Terraform de recursos problem√°ticos del Key Vault
# Esto remover√° las referencias a los secretos que causan errores 403

set -e

echo "üßπ Limpiando estado de Terraform..."

# Lista de recursos a remover del estado
resources_to_remove=(
    "azurerm_key_vault_secret.postgres_auth_password"
    "azurerm_key_vault_secret.postgres_users_password" 
    "azurerm_key_vault_secret.postgres_todos_password"
    "azurerm_key_vault_secret.postgres_consolidated_password"
)

echo "üîç Verificando qu√© recursos existen en el estado..."

for resource in "${resources_to_remove[@]}"; do
    if terraform state list | grep -q "^${resource}$"; then
        echo "‚ùå Removiendo del estado: $resource"
        terraform state rm "$resource" || echo "‚ö†Ô∏è  No se pudo remover $resource (puede que no exista)"
    else
        echo "‚úÖ No encontrado en el estado: $resource"
    fi
done

echo ""
echo "üîç Verificando otras posibles referencias problem√°ticas..."

# Verificar otros recursos del Key Vault que puedan causar problemas
if terraform state list | grep -q "azurerm_key_vault.main"; then
    echo "‚ÑπÔ∏è  Key Vault principal encontrado en el estado (esto est√° bien)"
else
    echo "‚ö†Ô∏è  Key Vault principal no encontrado en el estado"
fi

if terraform state list | grep -q "azurerm_key_vault_access_policy.current"; then
    echo "‚ÑπÔ∏è  Pol√≠tica de acceso encontrada en el estado (esto est√° bien)"
else
    echo "‚ö†Ô∏è  Pol√≠tica de acceso no encontrada en el estado"
fi

echo ""
echo "‚úÖ Limpieza del estado completada!"
echo ""
echo "üîÑ Pr√≥ximos pasos:"
echo "1. Ejecutar: terraform plan"
echo "2. Si no hay errores: terraform apply"
echo "3. Los secretos se pueden agregar manualmente despu√©s en Azure Portal"

echo ""
echo "üí° Nota: Esto no elimina los recursos de Azure, solo los remueve del estado de Terraform"
echo "   Los secretos seguir√°n existiendo en Azure si ya estaban creados"