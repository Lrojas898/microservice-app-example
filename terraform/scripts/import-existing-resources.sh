#!/bin/bash

# Script para importar recursos existentes de Azure al estado de Terraform
# Esto evita conflictos cuando los recursos ya existen en Azure

set -e

echo "üì¶ Importando recursos existentes de Azure..."

# Primero obtenemos la informaci√≥n del Redis Cache para construir el ID correcto
REDIS_NAME="microservice-redis-rjw97jf6"
RESOURCE_GROUP="microservice-app-rg"

echo "üîç Obteniendo ID del recurso Redis Cache..."

# Obtener el ID completo del recurso usando Azure CLI
REDIS_ID_RAW=$(az redis show --name "$REDIS_NAME" --resource-group "$RESOURCE_GROUP" --query "id" -o tsv 2>/dev/null)

if [ -z "$REDIS_ID_RAW" ]; then
    echo "‚ùå No se pudo encontrar el Redis Cache $REDIS_NAME"
    echo "üí° Verifica que el nombre y resource group sean correctos:"
    echo "   - Redis Name: $REDIS_NAME"
    echo "   - Resource Group: $RESOURCE_GROUP"
    exit 1
fi

# Normalizar el ID - Azure CLI a veces devuelve "Redis" pero Terraform espera "redis"
REDIS_ID=$(echo "$REDIS_ID_RAW" | sed 's|/Microsoft.Cache/Redis/|/Microsoft.Cache/redis/|')

echo "‚úÖ Redis ID encontrado: $REDIS_ID_RAW"
echo "‚úÖ Redis ID normalizado: $REDIS_ID"
echo ""

echo "üóÉÔ∏è  Importando Redis Cache al estado de Terraform..."
terraform import module.security.azurerm_redis_cache.main "$REDIS_ID"

if [ $? -eq 0 ]; then
    echo "‚úÖ Redis Cache importado exitosamente"
else
    echo "‚ùå Error al importar Redis Cache"
    echo "üí° Posibles causas:"
    echo "   1. El recurso ya est√° en el estado de Terraform"
    echo "   2. El m√≥dulo/recurso no existe en la configuraci√≥n"
    echo "   3. Problemas de permisos"
    exit 1
fi

echo ""
echo "üîç Verificando otros recursos que puedan necesitar importaci√≥n..."

# Aqu√≠ puedes agregar otros recursos si es necesario
# echo "Checking for other resources..."
# az resource list --resource-group "$RESOURCE_GROUP" --query "[].{Name:name, Type:type}" -o table

echo ""
echo "‚úÖ Importaci√≥n completada!"
echo ""
echo "üîÑ Pr√≥ximos pasos:"
echo "   1. terraform plan   # Para verificar diferencias"
echo "   2. terraform apply  # Para sincronizar estado"

echo ""
echo "üí° Nota: Despu√©s de importar, Terraform manejar√° este recurso existente"
echo "Si hay diferencias en la configuraci√≥n, Terraform las mostrar√° en el plan"