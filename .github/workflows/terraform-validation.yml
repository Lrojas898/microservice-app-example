name: Infrastructure Validation Pipeline

on:
  push:
    branches: [ 'infra/*' ]          
    paths:
      - 'terraform/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'terraform/**'
    types: [opened, synchronize, reopened]

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform-validate:
    name: Validate and Plan Infrastructure Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          lfs: false

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            }

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        id: init
        run: terraform init -input=false -upgrade
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Import Existing Azure Resources (idempotent)
        run: |
          chmod +x scripts/import_existing.sh
          ./scripts/import_existing.sh microservice-app-rg
        working-directory: terraform
        continue-on-error: true
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
            -var="location=centralus" \
            -var="resource_group_location=centralus" \
            -var="db_location=centralus" \
            -var="dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }}" \
            -var="dockerhub_token=${{ secrets.DOCKERHUB_TOKEN }}" \
            -input=false -no-color -out=tfplan
          terraform show -no-color tfplan > tfplan.txt
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload Terraform Plan Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: infrastructure-plan-${{ github.run_id }}
          path: |
            terraform/tfplan
            terraform/tfplan.txt
          retention-days: 30

      - name: Security Scan - Checkov
        run: |
          pip3 install checkov
          checkov -d terraform/ --framework terraform --quiet --soft-fail
        working-directory: terraform

      - name: Security Scan - Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: 'terraform/'
          format: 'sarif'
          output: 'terraform/trivy-results.sarif'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Upload SARIF Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: terraform/trivy-results.sarif
        continue-on-error: true

      - name: Comment Plan in PR
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('terraform/tfplan.txt', 'utf8');
            const truncatedPlan = plan.length > 20000 ? plan.substring(0, 20000) + '\n... (truncated for readability)' : plan;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '### ðŸ“‹ Infrastructure Change Review\n' +
                    'This PR proposes the following infrastructure changes:\n\n' +
                    '```hcl\n' + truncatedPlan + '\n```\n\n' +
                    '> **Security Note**: All changes have been scanned for security vulnerabilities using Checkov and Trivy.'
            });
