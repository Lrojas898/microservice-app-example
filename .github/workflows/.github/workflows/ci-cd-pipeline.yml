name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - 'terraform/**'
  push:
    branches: [main]
    paths-ignore:
      - 'terraform/**'

jobs:
  build-test:
    name: Build and Test ${{ matrix.service }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service, users-service, todos-service]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js (for Node services)
        if: matrix.service == 'auth-service' || matrix.service == 'todos-service'
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Java (for Spring Boot)
        if: matrix.service == 'users-service'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build ${{ matrix.service }}
        run: |
          cd microservices/${{ matrix.service }}
          if [ "${{ matrix.service }}" = "users-service" ]; then
            ./mvnw clean package -DskipTests
          else
            npm install
            npm run build
          fi

      - name: Test ${{ matrix.service }}
        run: |
          cd microservices/${{ matrix.service }}
          if [ "${{ matrix.service }}" = "users-service" ]; then
            ./mvnw test
          else
            npm test
          fi

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'